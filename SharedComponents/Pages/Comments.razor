@using SharedComponents.ReusableComponents
@using Microsoft.AspNetCore.Components.Forms
@inject IBlogApi _api

<h3>Comments</h3>
@foreach(var c in comments)
{
    <div class="media mb-4">
        <div class="media-body">
            <h5 class="mt-0">
                @c.Name
            </h5>
            <p>@c.Text</p>
            <small class="text-muted">@c.Date</small>
        </div>
    </div>
}

@if(Model != null)
{
    <EditForm method="post" Model="@Model" OnValidSubmit="@ValidSubmitAsync" FormName="CommentForm">
        <DataAnnotationsValidator/>
        <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider"/>
        <BlogInputText @bind-Value="Model.Name" Label="Name"/>
        <BlogInputText @bind-Value="Model.Text" Label="Comment" />
        <button type="submit">Add Comment</button>
    </EditForm>
}

@code{
    [Parameter, EditorRequired]
    public required string BlogPostId  { get; set; }
    [SupplyParameterFromForm]
    public Comment? Model { get; set; }
    List<Comment> comments = new();

    protected override async Task OnInitializedAsync()
    {
        Model = new Comment { BlogPostId = BlogPostId };
        comments = await LoadCommentsAsync(BlogPostId);
    }

    public async Task ValidSubmitAsync()
    {
        Model.Id = Guid.NewGuid().ToString();
        Model.Date = DateTime.Now;
        await _api.SaveCommentAsync(Model);
        comments = await LoadCommentsAsync(BlogPostId);
    }

    private async Task<List<Comment>> LoadCommentsAsync(string blogPostId)
    {
        var fetchedComments = await _api.GetCommentsAsync(blogPostId);
        return fetchedComments.OrderByDescending(c => c.Date).ToList();
    }
}